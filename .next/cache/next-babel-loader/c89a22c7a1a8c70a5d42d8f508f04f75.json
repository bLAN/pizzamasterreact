{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\retbr\\\\IdeaProjects\\\\pizzamasterreact\\\\src\\\\components\\\\PizzaStatusDisplay.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tmargin-right: 7px;\\n\\tmargin-left: 7px;\\n\\tpadding: 5px;\\n\\ttext-align: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PizzaCard from './PizzaCard';\nimport Grid from './grids/Grid';\nimport styled from 'styled-components';\nconst orders = [{\n  id: 1,\n  name: 'Jon Fossheim',\n  pizzaType: 'Grandiosa',\n  pizzaId: 1,\n  status: 1\n}, {\n  id: 2,\n  name: 'Erviker',\n  pizzaType: 'Big One',\n  pizzaId: 3,\n  status: 1\n}, {\n  id: 3,\n  name: 'Markjen',\n  pizzaType: 'Grandiosa Pepperoni',\n  pizzaId: 2,\n  status: 2\n}, {\n  id: 4,\n  name: 'Tech Simen',\n  pizzaType: 'Big One Triple Cheese',\n  pizzaId: 4,\n  status: 3\n}, {\n  id: 5,\n  name: 'Kristine',\n  pizzaType: 'Big One',\n  pizzaId: 3,\n  status: 2\n}];\nconst Col = styled.div(_templateObject());\n\nconst inQueue = isAdmin => orders.map(order => {\n  if (order.status === 1) {\n    return __jsx(PizzaCard, {\n      order: order,\n      isAdmin: isAdmin,\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n  return null;\n});\n\nconst inOven = isAdmin => orders.map(order => {\n  if (order.status === 2) {\n    return __jsx(PizzaCard, {\n      order: order,\n      isAdmin: isAdmin,\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n  return null;\n});\n\nconst isFinished = isAdmin => orders.map(order => {\n  if (order.status === 3) {\n    return __jsx(PizzaCard, {\n      order: order,\n      isAdmin: isAdmin,\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  }\n\n  return null;\n});\n\nconst PizzaStatusDisplay = ({\n  isAdmin\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"I K\\xF8\"), inQueue(isAdmin)), __jsx(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"I Ovn\"), inOven(isAdmin)), __jsx(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Klar for Henting\"), isFinished(isAdmin))));\n};\n\nexport default PizzaStatusDisplay;","map":{"version":3,"sources":["C:/Users/retbr/IdeaProjects/pizzamasterreact/src/components/PizzaStatusDisplay.tsx"],"names":["React","PizzaCard","Grid","styled","orders","id","name","pizzaType","pizzaId","status","Col","div","inQueue","isAdmin","map","order","inOven","isFinished","PizzaStatusDisplay"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PizzaCard from './PizzaCard'\r\nimport Grid from './grids/Grid'\r\nimport styled from 'styled-components'\r\n\r\nconst orders = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: 'Jon Fossheim',\r\n\t\tpizzaType: 'Grandiosa',\r\n\t\tpizzaId: 1,\r\n\t\tstatus: 1\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: 'Erviker',\r\n\t\tpizzaType: 'Big One',\r\n\t\tpizzaId: 3,\r\n\t\tstatus: 1\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: 'Markjen',\r\n\t\tpizzaType: 'Grandiosa Pepperoni',\r\n\t\tpizzaId: 2,\r\n\t\tstatus: 2\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tname: 'Tech Simen',\r\n\t\tpizzaType: 'Big One Triple Cheese',\r\n\t\tpizzaId: 4,\r\n\t\tstatus: 3\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tname: 'Kristine',\r\n\t\tpizzaType: 'Big One',\r\n\t\tpizzaId: 3,\r\n\t\tstatus: 2\r\n\t},\r\n]\r\n\r\nconst Col = styled.div`\r\n\tmargin-right: 7px;\r\n\tmargin-left: 7px;\r\n\tpadding: 5px;\r\n\ttext-align: center;\r\n`\r\n\r\nexport interface PizzaStatusDisplayProps {\r\n\tisAdmin: boolean\r\n}\r\n\r\nconst inQueue = (isAdmin: boolean) =>  orders.map(order => {\r\n\t\tif (order.status === 1) {\r\n\t\t\treturn <PizzaCard order={order} isAdmin={isAdmin} key={order.id} />\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n)\r\nconst inOven = (isAdmin: boolean) =>  orders.map(order => {\r\n\t\tif (order.status === 2) {\r\n\t\t\treturn <PizzaCard order={order} isAdmin={isAdmin} key={order.id} />\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n)\r\nconst isFinished = (isAdmin: boolean) => orders.map(order => {\r\n\t\tif (order.status === 3) {\r\n\t\t\treturn <PizzaCard order={order} isAdmin={isAdmin} key={order.id} />\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n)\r\n\r\nconst PizzaStatusDisplay = ({ isAdmin }: PizzaStatusDisplayProps) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h3>I KÃ¸</h3>\r\n\t\t\t\t\t{inQueue(isAdmin)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h3>I Ovn</h3>\r\n\t\t\t\t\t{inOven(isAdmin)}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h3>Klar for Henting</h3>\r\n\t\t\t\t\t{isFinished(isAdmin)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PizzaStatusDisplay\r\n"]},"metadata":{},"sourceType":"module"}