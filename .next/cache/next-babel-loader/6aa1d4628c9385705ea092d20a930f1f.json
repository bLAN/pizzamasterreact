{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\retbr\\\\IdeaProjects\\\\pizzamasterreact\\\\src\\\\components\\\\tools\\\\DatabaseManagement.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nexport default function DatabaseManagement() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Item',\n      field: 'item'\n    }, {\n      title: 'Item ID',\n      field: 'itemId',\n      type: 'numeric'\n    }, {\n      title: 'Stock',\n      field: 'stock',\n      type: 'numeric'\n    }],\n    data: [{\n      item: 'Grandiosa',\n      itemId: 1,\n      stock: 43\n    }, {\n      item: 'Grandiosa Pepperoni',\n      itemId: 2,\n      stock: 64\n    }, {\n      item: 'Big One',\n      itemId: 3,\n      stock: 13\n    }, {\n      item: 'Big One Triple Cheese',\n      itemId: 4,\n      stock: 61\n    }]\n  });\n  return __jsx(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["C:/Users/retbr/IdeaProjects/pizzamasterreact/src/components/tools/DatabaseManagement.tsx"],"names":["React","MaterialTable","DatabaseManagement","state","setState","useState","columns","title","field","type","data","item","itemId","stock","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MaterialTable, { Column } from 'material-table';\r\n\r\ninterface Row {\r\n\titem: string;\r\n\titemId: number;\r\n\tstock: number;\r\n}\r\n\r\ninterface TableState {\r\n\tcolumns: Array<Column<Row>>;\r\n\tdata: Row[];\r\n}\r\n\r\nexport default function DatabaseManagement() {\r\n\tconst [state, setState] = React.useState<TableState>({\r\n\t\tcolumns: [\r\n\t\t\t{ title: 'Item', field: 'item' },\r\n\t\t\t{ title: 'Item ID', field: 'itemId', type: 'numeric' },\r\n\t\t\t{ title: 'Stock', field: 'stock', type: 'numeric' },\r\n\t\t],\r\n\t\tdata: [\r\n\t\t\t{ item: 'Grandiosa', itemId: 1, stock: 43 },\r\n\t\t\t{ item: 'Grandiosa Pepperoni', itemId: 2, stock: 64, },\r\n\t\t\t{ item: 'Big One', itemId: 3, stock: 13, },\r\n\t\t\t{ item: 'Big One Triple Cheese', itemId: 4, stock: 61, },\r\n\t\t],\r\n\t});\r\n\r\n\treturn (\r\n\t\t<MaterialTable\r\n\t\t\ttitle=\"Editable Example\"\r\n\t\t\tcolumns={state.columns}\r\n\t\t\tdata={state.data}\r\n\t\t\teditable={{\r\n\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tsetState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.push(newData);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tif (oldData) {\r\n\t\t\t\t\t\t\t\tsetState(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tsetState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}