{"version":3,"file":"static/webpack/static\\development\\pages\\admin.js.598546d355d98c2c8fc5.hot-update.js","sources":["webpack:///./src/components/tools/DatabaseManagement.tsx"],"sourcesContent":["import React from 'react';\r\nimport MaterialTable, { Column } from 'material-table';\r\n\r\ninterface Row {\r\n\titem: string;\r\n\titemId: number;\r\n\tstock: number;\r\n}\r\n\r\ninterface TableState {\r\n\tcolumns: Array<Column<Row>>;\r\n\tdata: Row[];\r\n}\r\n\r\nexport default function DatabaseManagement() {\r\n\tconst [state, setState] = React.useState<TableState>({\r\n\t\tcolumns: [\r\n\t\t\t{ title: 'Item', field: 'item' },\r\n\t\t\t{ title: 'Item ID', field: 'itemId', type: 'numeric' },\r\n\t\t\t{ title: 'Stock', field: 'stock', type: 'numeric' },\r\n\t\t],\r\n\t\tdata: [\r\n\t\t\t{ item: 'Grandiosa', itemId: 1, stock: 43 },\r\n\t\t\t{ item: 'Grandiosa Pepperoni', itemId: 2, stock: 64, },\r\n\t\t\t{ item: 'Big One', itemId: 3, stock: 13, },\r\n\t\t\t{ item: 'Big One Triple Cheese', itemId: 4, stock: 61, },\r\n\t\t],\r\n\t});\r\n\r\n\treturn (\r\n\t\t<MaterialTable\r\n\t\t\ttitle=\"Ikkje kÃ¸dd med denne om du ikkje veit ka du gjer! :)\"\r\n\t\t\tcolumns={state.columns}\r\n\t\t\tdata={state.data}\r\n\t\t\teditable={{\r\n\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tsetState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.push(newData);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tif (oldData) {\r\n\t\t\t\t\t\t\t\tsetState(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\tsetState(prevState => {\r\n\t\t\t\t\t\t\t\tconst data = [...prevState.data];\r\n\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\treturn { ...prevState, data };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t}),\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAVA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAnCA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;;;;A","sourceRoot":""}